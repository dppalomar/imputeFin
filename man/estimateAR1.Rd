% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_impute_AR1.R
\name{estimateAR1}
\alias{estimateAR1}
\title{Fit Student's t AR(1) Models to Time Series with Missing values}
\usage{
estimateAR1(y, n_chain = 10, n_thin = 1, n_iteration = 100, K = 30,
  estimates_init = NULL, y_sample_init = NULL)
}
\arguments{
\item{y}{a xts object indicating time series with missing values. The first and last one should not be NA.}

\item{n_chain}{a positive integer indicating the number of the parallel Markov chains used.}

\item{n_thin}{a positive integer indicating the sampling period of the Gibbs sampling. Every n_thin-th samples is used. This is aimed to reduce the dependence of the samples.}

\item{n_iteration}{a positive integer indicating the number of the iterations.}

\item{K}{a positive number controlling the values the step sizes.}

\item{estimates_init}{a vector indicating the initialization of the estimates phi0, phi1, sigma^2, and nu.}

\item{y_sample_init}{a vector indicating the initialization of complete y for Gibbs sampling. It has the same observed values with y while the missing values are imputed.}
}
\value{
A list containing the following elements:
\item{\code{phi0}}{real number, the estimate for phi0}
\item{\code{phi1}}{real number, the estimate for phi1}
\item{\code{sigma2}}{positive number, the estimate for sigma^2}
\item{\code{nu}}{positive number, the estimate for nu}
\item{\code{phi0_iterate}}{a vector of real numbers, the estimates for phi0 in each iteration}
\item{\code{phi1_iterate}}{a vector of real numbers, the estimates for phi1 in each iteration}
\item{\code{sigma2_iterate}}{a vector of positive numbers, the estimates for sigma^2 in each iteration}
\item{\code{nu_iterate}}{a vector of positive numbers, the estimates for nu in each iteration}
}
\description{
Estimate the parameters of a Student's t AR(1) model from a time series with missing values
}
\examples{
library(imputeFin)
library(MASS)
library(imputeTS)

#generate a complete Student's t AR(1) time series
phi0 <- 1
phi1 <- 0.5 
sigma2 <- 0.01 
nu <- 1
n <- 200
n_miss <- 25 
n_drop <- 100
n_total <- n + n_drop
data <- vector(length = n_total)
epsilon <- vector(length = n_total - 1)# innovations
data[1] <- 0
for (i in 2:n_total) {
  epsilon[i-1] <- rt(1, nu) * sqrt(sigma2)
  data[i] <- phi0 + phi1 * data[i-1] + epsilon[i-1]
}
data <- data[(n_drop + 1):n_total] # drop the first n_drop to reduce the influence of initial point
dates <- seq(as.Date("2016-01-01"), length = n, by = "days") 
y_orig <- xts(data,  dates)

#creat missing values
index_miss <- sample( 2:(n - 1), n_miss, FALSE)
index_miss <- sort(index_miss)
y_miss <- y_orig
y_miss[index_miss] <- NA

# estimate the parameters from this incomplete time series
estimation_result <- estimateAR1(y_miss)

}
\author{
Junyan Liu and Daniel P. Palomar
}
