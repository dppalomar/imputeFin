% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_impute_AR1_t.R
\name{imputeAR1t}
\alias{imputeAR1t}
\title{Imputate Missing Values in  Incomplete Student's t AR(1) Time Series}
\usage{
imputeAR1t(y, n_sample = 1, param = NULL, random_walk = FALSE,
  zero_mean = TRUE, n_burn = 100, n_thin = 50)
}
\arguments{
\item{y}{a xts object indicating time series with missing values. The first and last one should not be NA.}

\item{n_sample}{a positive integer indicating the number of imputations (default \code{1}).}

\item{param}{a list consisting of the paramters of the Student's t AR(1) time series y if known. The default value is FALSE.}

\item{random_walk}{logical. If TRUE, y is a random walk time series, and phi1 = 1. If FALSE, y is a general AR(1) time series, and phi1 is unknown. The default value is FALSE.}

\item{zero_mean}{logical. If TRUE, y is a zero-mean time series, and phi0 = 1. If FALSE, y is a general AR(1) time series, and phi0 is unknown.}

\item{n_burn}{a positive integer controlling the length of the burn-in period of the Gibb sampling (default \code{100}). The first (n_burn * n_thin) samples generated will be ignored.}

\item{n_thin}{a positive integer indicating the sampling period of Gibbs sampling. After then burn-in perid (default \code{50}), every n_thin-th sample is used. This is aimed to reduce the dependence of the samples.}
}
\value{
\item{\code{y_imputed}  }{a xts object, each column is a imputed complete time series}
}
\description{
Estimate the parameters of the Student's t AR(1) model from a time series with missing values and impute the missing values based on the estimates
}
\examples{
library(imputeFin)
library(xts)
phi0 <- 1
phi1 <- 0.5 
sigma2 <- 0.01 
nu <- 1
n <- 200
n_miss <- 25 
n_drop <- 100
n_total <- n + n_drop
data <- vector(length = n_total)
epsilon <- vector(length = n_total - 1)# innovations
data[1] <- 0
for (i in 2:n_total) {
  epsilon[i - 1] <- rt(1, nu) * sqrt(sigma2)
  data[i] <- phi0 + phi1 * data[i - 1] + epsilon[i - 1]
}
data <- data[(n_drop + 1):n_total] # drop the first n_drop to reduce the influence of initial point
dates <- seq(as.Date("2016-01-01"), length = n, by = "days") 
y_orig <- xts(data,  dates)

# creat missing values
index_miss <- sample( 2:(n - 1), n_miss, FALSE)
index_miss <- sort(index_miss)
y <- y_orig
y[index_miss] <- NA

# impute the missing values and generate n_sample complete time series
y_imputed <- imputeAR1t( y_miss, n_sample = 3) # if the parameters are unknown
param = list("phi0" = phi0,
             "phi1" = phi1,
             "sigma2" = sigma2,
             "nu" = nu)
y_imputed <- imputeAR1t(y_miss, n_sample = 3, param) # if the parameters are unknown
}
\author{
Junyan Liu and Daniel P. Palomar
}
